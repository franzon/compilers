Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABRE_COLCHETES
    ABRE_PARENTESES
    ADICAO
    ATE
    ATRIBUICAO
    COMENTARIO
    DIFERENTE
    DIVISAO
    DOIS_PONTOS
    E
    ENTAO
    ESCREVA
    FECHA_COLCHETES
    FECHA_PARENTESES
    FIM
    FLUTUANTE
    IDENTIFICADOR
    IGUAL
    INTEIRO
    LEIA
    MAIOR
    MAIOR_IGUAL
    MENOR
    MENOR_IGUAL
    MULTIPLICACAO
    NAO
    OU
    REPITA
    RETORNA
    SE
    SENAO
    SUBTRACAO
    VIRGULA

Grammar

Rule 0     S' -> fator
Rule 1     fator -> numero
Rule 2     numero -> INTEIRO_LITERAL
Rule 3     numero -> FLUTUANTE_LITERAL

Terminals, with rules where they appear

ABRE_COLCHETES       : 
ABRE_PARENTESES      : 
ADICAO               : 
ATE                  : 
ATRIBUICAO           : 
COMENTARIO           : 
DIFERENTE            : 
DIVISAO              : 
DOIS_PONTOS          : 
E                    : 
ENTAO                : 
ESCREVA              : 
FECHA_COLCHETES      : 
FECHA_PARENTESES     : 
FIM                  : 
FLUTUANTE            : 
FLUTUANTE_LITERAL    : 3
IDENTIFICADOR        : 
IGUAL                : 
INTEIRO              : 
INTEIRO_LITERAL      : 2
LEIA                 : 
MAIOR                : 
MAIOR_IGUAL          : 
MENOR                : 
MENOR_IGUAL          : 
MULTIPLICACAO        : 
NAO                  : 
OU                   : 
REPITA               : 
RETORNA              : 
SE                   : 
SENAO                : 
SUBTRACAO            : 
VIRGULA              : 
error                : 

Nonterminals, with rules where they appear

fator                : 0
numero               : 1

Parsing method: LALR

state 0

    (0) S' -> . fator
    (1) fator -> . numero
    (2) numero -> . INTEIRO_LITERAL
    (3) numero -> . FLUTUANTE_LITERAL

    INTEIRO_LITERAL shift and go to state 3
    FLUTUANTE_LITERAL shift and go to state 4

    fator                          shift and go to state 1
    numero                         shift and go to state 2

state 1

    (0) S' -> fator .



state 2

    (1) fator -> numero .

    $end            reduce using rule 1 (fator -> numero .)


state 3

    (2) numero -> INTEIRO_LITERAL .

    $end            reduce using rule 2 (numero -> INTEIRO_LITERAL .)


state 4

    (3) numero -> FLUTUANTE_LITERAL .

    $end            reduce using rule 3 (numero -> FLUTUANTE_LITERAL .)

