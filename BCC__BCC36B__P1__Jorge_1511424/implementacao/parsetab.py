
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABRE_COL ABRE_PAR ATE ATRIBUICAO COMENTARIO DESIGUALDADE DIVISAO DOIS_PONTOS ENTAO ESCREVA E_LOGICO FECHA_COL FECHA_PAR FIM FLUTUANTE ID IGUALDADE INTEIRO LEIA MAIOR MAIOR_IGUAL MENOR MENOR_IGUAL MULTIPLICACAO NEGACAO NUM_INTEIRO NUM_NOTACAO_CIENTIFICA NUM_PONTO_FLUTUANTE OU_LOGICO REPITA RETORNA SE SENAO SOMA SUBTRACAO VIRGULAprograma : lista_declaracoeslista_declaracoes : lista_declaracoes declaracao\n                             | declaracaodeclaracao : declaracao_variaveis\n                      | inicializacao_variaveis\n                      | declaracao_funcaodeclaracao_variaveis : tipo DOIS_PONTOS lista_variaveisinicializacao_variaveis : atribuicaolista_variaveis : lista_variaveis VIRGULA var\n                           | varidentificador : IDvar : identificador\n               | identificador indiceindice : indice ABRE_COL expressao FECHA_COL\n                  | ABRE_COL expressao FECHA_COLtipo : INTEIRO\n                | FLUTUANTEdeclaracao_funcao : tipo cabecalho\n                             | cabecalhocabecalho : identificador ABRE_PAR lista_parametros FECHA_PAR corpo FIMlista_parametros : lista_parametros VIRGULA parametro\n                            | parametro\n                            | vazioparametro : tipo DOIS_PONTOS identificadorparametro : parametro ABRE_COL FECHA_COLcorpo : corpo acao\n                 | vazioacao : expressao\n                | declaracao_variaveis\n                | se\n                | repita\n                | leia\n                | escreva\n                | retorna\n                | errorse : SE expressao ENTAO corpo FIM\n              | SE expressao ENTAO corpo SENAO corpo FIMrepita : REPITA corpo ATE expressaoatribuicao : var ATRIBUICAO expressaoleia : LEIA ABRE_PAR var FECHA_PARescreva : ESCREVA ABRE_PAR expressao FECHA_PARretorna : RETORNA ABRE_PAR expressao FECHA_PARexpressao : expressao_logica\n                     | atribuicaoexpressao_logica : expressao_simples\n                             | expressao_logica operador_logico expressao_simplesexpressao_simples : expressao_aditiva\n                             | expressao_simples operador_relacional expressao_aditivaexpressao_aditiva : expressao_multiplicativa\n                             | expressao_aditiva operador_soma expressao_multiplicativaexpressao_multiplicativa : expressao_unaria\n                                    | expressao_multiplicativa operador_multiplicacao expressao_unariaexpressao_unaria : fator\n                            | operador_soma fator\n                            | operador_negacao fatoroperador_relacional : MENOR\n                               | MAIOR\n                               | IGUALDADE\n                               | DESIGUALDADE\n                               | MENOR_IGUAL\n                               | MAIOR_IGUALoperador_soma : SOMA\n                          | SUBTRACAOoperador_logico : E_LOGICO\n                           | OU_LOGICOoperador_negacao : NEGACAOoperador_multiplicacao : MULTIPLICACAO\n                                  | DIVISAOfator : ABRE_PAR expressao FECHA_PAR\n                 | var\n                 | chamada_funcao\n                 | numeronumero : NUM_INTEIRO\n                  | NUM_PONTO_FLUTUANTE\n                  | NUM_NOTACAO_CIENTIFICAchamada_funcao : identificador ABRE_PAR lista_argumentos FECHA_PARlista_argumentos : lista_argumentos VIRGULA expressao\n                            | expressao\n                            | vaziocomentario : COMENTARIOvazio :'
    
_lr_action_items = {'INTEIRO':([0,2,3,4,5,6,8,9,14,15,17,20,21,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,69,70,71,73,74,78,79,80,81,82,86,87,88,89,93,94,96,97,98,99,100,101,102,103,104,105,108,114,118,123,124,125,126,127,128,129,130,131,],[10,10,-3,-4,-5,-6,-8,-19,-11,-2,-18,10,-13,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-81,10,-15,-9,-46,-48,-50,-52,-69,10,-27,-14,-76,-20,-26,-28,-29,-30,-31,-32,-33,-34,-35,-81,10,-81,10,-38,-40,-41,-42,-36,-81,10,-37,]),'FLUTUANTE':([0,2,3,4,5,6,8,9,14,15,17,20,21,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,69,70,71,73,74,78,79,80,81,82,86,87,88,89,93,94,96,97,98,99,100,101,102,103,104,105,108,114,118,123,124,125,126,127,128,129,130,131,],[11,11,-3,-4,-5,-6,-8,-19,-11,-2,-18,11,-13,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-81,11,-15,-9,-46,-48,-50,-52,-69,11,-27,-14,-76,-20,-26,-28,-29,-30,-31,-32,-33,-34,-35,-81,11,-81,11,-38,-40,-41,-42,-36,-81,11,-37,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,78,79,80,81,82,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,114,115,116,117,118,119,123,124,125,126,127,128,129,130,131,],[14,14,-3,-4,-5,-6,14,-8,-19,-16,-17,-11,-2,14,-18,14,-13,14,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,14,-51,-53,14,14,-71,-72,-62,-63,-66,-73,-74,-75,14,14,14,-64,-65,14,-56,-57,-58,-59,-60,-61,14,14,14,-67,-68,-54,-70,-55,-81,14,-15,-9,-46,-48,-50,-52,-69,14,-27,-14,-76,14,-20,-26,-28,-29,-30,-31,-32,-33,-34,-35,14,-81,14,14,14,14,-81,14,14,-38,-40,-41,-42,-36,-81,14,-37,]),'$end':([1,2,3,4,5,6,8,9,14,15,17,21,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,69,70,71,78,79,80,81,82,86,87,93,94,96,],[0,-1,-3,-4,-5,-6,-8,-19,-11,-2,-18,-13,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-15,-9,-46,-48,-50,-52,-69,-14,-76,-20,]),'DOIS_PONTOS':([7,10,11,50,106,],[16,-16,-17,76,16,]),'ATRIBUICAO':([12,13,14,21,26,32,78,93,],[19,-12,-11,-13,19,-12,-15,-14,]),'ABRE_PAR':([13,14,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,86,87,88,89,93,94,95,97,98,99,100,101,102,103,104,105,107,108,109,110,111,114,116,117,118,119,123,124,125,126,127,128,129,130,131,],[20,-11,20,38,-13,38,-7,-10,-12,-70,-39,-43,-44,-45,-47,65,-49,38,-51,-53,38,38,-71,-72,-62,-63,-66,-73,-74,-75,38,38,-64,-65,38,-56,-57,-58,-59,-60,-61,38,38,38,-67,-68,-54,-70,-55,-81,-15,-9,-46,-48,-50,-52,-69,38,-27,-14,-76,38,-26,-28,-29,-30,-31,-32,-33,-34,-35,38,-81,115,116,117,38,38,38,-81,38,38,-38,-40,-41,-42,-36,-81,38,-37,]),'ABRE_COL':([13,14,21,25,32,48,78,90,91,92,93,],[22,-11,51,22,22,75,-15,75,-25,-24,-14,]),'VIRGULA':([14,20,21,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,47,48,49,65,69,70,71,78,79,80,81,82,83,84,85,86,87,90,91,92,93,94,112,],[-11,-81,-13,53,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,74,-22,-23,-81,-54,-70,-55,-15,-9,-46,-48,-50,95,-78,-79,-52,-69,-21,-25,-24,-14,-76,-77,]),'FIM':([14,21,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,69,70,71,73,78,79,80,81,82,86,87,88,89,93,94,97,98,99,100,101,102,103,104,105,118,123,124,125,126,127,128,129,130,131,],[-11,-13,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-81,-15,-9,-46,-48,-50,-52,-69,96,-27,-14,-76,-26,-28,-29,-30,-31,-32,-33,-34,-35,-81,128,-38,-40,-41,-42,-36,-81,131,-37,]),'error':([14,21,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,69,70,71,73,78,79,80,81,82,86,87,88,89,93,94,97,98,99,100,101,102,103,104,105,108,114,118,123,124,125,126,127,128,129,130,131,],[-11,-13,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-81,-15,-9,-46,-48,-50,-52,-69,105,-27,-14,-76,-26,-28,-29,-30,-31,-32,-33,-34,-35,-81,105,-81,105,-38,-40,-41,-42,-36,-81,105,-37,]),'SE':([14,21,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,69,70,71,73,78,79,80,81,82,86,87,88,89,93,94,97,98,99,100,101,102,103,104,105,108,114,118,123,124,125,126,127,128,129,130,131,],[-11,-13,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-81,-15,-9,-46,-48,-50,-52,-69,107,-27,-14,-76,-26,-28,-29,-30,-31,-32,-33,-34,-35,-81,107,-81,107,-38,-40,-41,-42,-36,-81,107,-37,]),'REPITA':([14,21,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,69,70,71,73,78,79,80,81,82,86,87,88,89,93,94,97,98,99,100,101,102,103,104,105,108,114,118,123,124,125,126,127,128,129,130,131,],[-11,-13,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-81,-15,-9,-46,-48,-50,-52,-69,108,-27,-14,-76,-26,-28,-29,-30,-31,-32,-33,-34,-35,-81,108,-81,108,-38,-40,-41,-42,-36,-81,108,-37,]),'LEIA':([14,21,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,69,70,71,73,78,79,80,81,82,86,87,88,89,93,94,97,98,99,100,101,102,103,104,105,108,114,118,123,124,125,126,127,128,129,130,131,],[-11,-13,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-81,-15,-9,-46,-48,-50,-52,-69,109,-27,-14,-76,-26,-28,-29,-30,-31,-32,-33,-34,-35,-81,109,-81,109,-38,-40,-41,-42,-36,-81,109,-37,]),'ESCREVA':([14,21,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,69,70,71,73,78,79,80,81,82,86,87,88,89,93,94,97,98,99,100,101,102,103,104,105,108,114,118,123,124,125,126,127,128,129,130,131,],[-11,-13,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-81,-15,-9,-46,-48,-50,-52,-69,110,-27,-14,-76,-26,-28,-29,-30,-31,-32,-33,-34,-35,-81,110,-81,110,-38,-40,-41,-42,-36,-81,110,-37,]),'RETORNA':([14,21,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,69,70,71,73,78,79,80,81,82,86,87,88,89,93,94,97,98,99,100,101,102,103,104,105,108,114,118,123,124,125,126,127,128,129,130,131,],[-11,-13,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-81,-15,-9,-46,-48,-50,-52,-69,111,-27,-14,-76,-26,-28,-29,-30,-31,-32,-33,-34,-35,-81,111,-81,111,-38,-40,-41,-42,-36,-81,111,-37,]),'SOMA':([14,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,38,39,40,41,42,44,45,46,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,86,87,88,89,93,94,95,97,98,99,100,101,102,103,104,105,107,108,114,116,117,118,119,123,124,125,126,127,128,129,130,131,],[-11,41,-13,41,-7,-10,-12,-70,-39,-43,-44,-45,41,-12,-49,-51,-53,41,-71,-72,-62,-63,-73,-74,-75,41,41,-64,-65,41,-56,-57,-58,-59,-60,-61,41,41,41,-67,-68,-54,-70,-55,-81,-15,-9,-46,41,-50,-52,-69,41,-27,-14,-76,41,-26,-28,-29,-30,-31,-32,-33,-34,-35,41,-81,41,41,41,-81,41,41,-38,-40,-41,-42,-36,-81,41,-37,]),'SUBTRACAO':([14,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,38,39,40,41,42,44,45,46,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,86,87,88,89,93,94,95,97,98,99,100,101,102,103,104,105,107,108,114,116,117,118,119,123,124,125,126,127,128,129,130,131,],[-11,42,-13,42,-7,-10,-12,-70,-39,-43,-44,-45,42,-12,-49,-51,-53,42,-71,-72,-62,-63,-73,-74,-75,42,42,-64,-65,42,-56,-57,-58,-59,-60,-61,42,42,42,-67,-68,-54,-70,-55,-81,-15,-9,-46,42,-50,-52,-69,42,-27,-14,-76,42,-26,-28,-29,-30,-31,-32,-33,-34,-35,42,-81,42,42,42,-81,42,42,-38,-40,-41,-42,-36,-81,42,-37,]),'NEGACAO':([14,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,38,39,40,41,42,44,45,46,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,86,87,88,89,93,94,95,97,98,99,100,101,102,103,104,105,107,108,114,116,117,118,119,123,124,125,126,127,128,129,130,131,],[-11,43,-13,43,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,43,-71,-72,-62,-63,-73,-74,-75,43,43,-64,-65,43,-56,-57,-58,-59,-60,-61,43,43,43,-67,-68,-54,-70,-55,-81,-15,-9,-46,-48,-50,-52,-69,43,-27,-14,-76,43,-26,-28,-29,-30,-31,-32,-33,-34,-35,43,-81,43,43,43,-81,43,43,-38,-40,-41,-42,-36,-81,43,-37,]),'NUM_INTEIRO':([14,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,86,87,88,89,93,94,95,97,98,99,100,101,102,103,104,105,107,108,114,116,117,118,119,123,124,125,126,127,128,129,130,131,],[-11,44,-13,44,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,44,-51,-53,44,44,-71,-72,-62,-63,-66,-73,-74,-75,44,44,-64,-65,44,-56,-57,-58,-59,-60,-61,44,44,44,-67,-68,-54,-70,-55,-81,-15,-9,-46,-48,-50,-52,-69,44,-27,-14,-76,44,-26,-28,-29,-30,-31,-32,-33,-34,-35,44,-81,44,44,44,-81,44,44,-38,-40,-41,-42,-36,-81,44,-37,]),'NUM_PONTO_FLUTUANTE':([14,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,86,87,88,89,93,94,95,97,98,99,100,101,102,103,104,105,107,108,114,116,117,118,119,123,124,125,126,127,128,129,130,131,],[-11,45,-13,45,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,45,-51,-53,45,45,-71,-72,-62,-63,-66,-73,-74,-75,45,45,-64,-65,45,-56,-57,-58,-59,-60,-61,45,45,45,-67,-68,-54,-70,-55,-81,-15,-9,-46,-48,-50,-52,-69,45,-27,-14,-76,45,-26,-28,-29,-30,-31,-32,-33,-34,-35,45,-81,45,45,45,-81,45,45,-38,-40,-41,-42,-36,-81,45,-37,]),'NUM_NOTACAO_CIENTIFICA':([14,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,86,87,88,89,93,94,95,97,98,99,100,101,102,103,104,105,107,108,114,116,117,118,119,123,124,125,126,127,128,129,130,131,],[-11,46,-13,46,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,46,-51,-53,46,46,-71,-72,-62,-63,-66,-73,-74,-75,46,46,-64,-65,46,-56,-57,-58,-59,-60,-61,46,46,46,-67,-68,-54,-70,-55,-81,-15,-9,-46,-48,-50,-52,-69,46,-27,-14,-76,46,-26,-28,-29,-30,-31,-32,-33,-34,-35,46,-81,46,46,46,-81,46,46,-38,-40,-41,-42,-36,-81,46,-37,]),'ATE':([14,21,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,69,70,71,78,79,80,81,82,86,87,89,93,94,97,98,99,100,101,102,103,104,105,108,114,124,125,126,127,128,131,],[-11,-13,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-15,-9,-46,-48,-50,-52,-69,-27,-14,-76,-26,-28,-29,-30,-31,-32,-33,-34,-35,-81,119,-38,-40,-41,-42,-36,-37,]),'SENAO':([14,21,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,69,70,71,78,79,80,81,82,86,87,89,93,94,97,98,99,100,101,102,103,104,105,118,123,124,125,126,127,128,131,],[-11,-13,-7,-10,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-15,-9,-46,-48,-50,-52,-69,-27,-14,-76,-26,-28,-29,-30,-31,-32,-33,-34,-35,-81,129,-38,-40,-41,-42,-36,-37,]),'MULTIPLICACAO':([14,21,26,32,33,35,36,39,40,44,45,46,69,70,71,78,82,86,87,93,94,],[-11,-13,-70,-12,67,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-15,67,-52,-69,-14,-76,]),'DIVISAO':([14,21,26,32,33,35,36,39,40,44,45,46,69,70,71,78,82,86,87,93,94,],[-11,-13,-70,-12,68,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-15,68,-52,-69,-14,-76,]),'MENOR':([14,21,26,30,31,32,33,35,36,39,40,44,45,46,69,70,71,78,80,81,82,86,87,93,94,],[-11,-13,-70,58,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-15,58,-48,-50,-52,-69,-14,-76,]),'MAIOR':([14,21,26,30,31,32,33,35,36,39,40,44,45,46,69,70,71,78,80,81,82,86,87,93,94,],[-11,-13,-70,59,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-15,59,-48,-50,-52,-69,-14,-76,]),'IGUALDADE':([14,21,26,30,31,32,33,35,36,39,40,44,45,46,69,70,71,78,80,81,82,86,87,93,94,],[-11,-13,-70,60,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-15,60,-48,-50,-52,-69,-14,-76,]),'DESIGUALDADE':([14,21,26,30,31,32,33,35,36,39,40,44,45,46,69,70,71,78,80,81,82,86,87,93,94,],[-11,-13,-70,61,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-15,61,-48,-50,-52,-69,-14,-76,]),'MENOR_IGUAL':([14,21,26,30,31,32,33,35,36,39,40,44,45,46,69,70,71,78,80,81,82,86,87,93,94,],[-11,-13,-70,62,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-15,62,-48,-50,-52,-69,-14,-76,]),'MAIOR_IGUAL':([14,21,26,30,31,32,33,35,36,39,40,44,45,46,69,70,71,78,80,81,82,86,87,93,94,],[-11,-13,-70,63,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-15,63,-48,-50,-52,-69,-14,-76,]),'E_LOGICO':([14,21,26,28,30,31,32,33,35,36,39,40,44,45,46,69,70,71,78,80,81,82,86,87,93,94,],[-11,-13,-70,55,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-15,-46,-48,-50,-52,-69,-14,-76,]),'OU_LOGICO':([14,21,26,28,30,31,32,33,35,36,39,40,44,45,46,69,70,71,78,80,81,82,86,87,93,94,],[-11,-13,-70,56,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-15,-46,-48,-50,-52,-69,-14,-76,]),'FECHA_COL':([14,21,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,52,69,70,71,75,77,78,80,81,82,86,87,93,94,],[-11,-13,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,78,-54,-70,-55,91,93,-15,-46,-48,-50,-52,-69,-14,-76,]),'FECHA_PAR':([14,20,21,25,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,47,48,49,65,69,70,71,72,78,80,81,82,83,84,85,86,87,90,91,92,93,94,112,120,121,122,],[-11,-81,-13,-12,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,73,-22,-23,-81,-54,-70,-55,87,-15,-46,-48,-50,94,-78,-79,-52,-69,-21,-25,-24,-14,-76,-77,125,126,127,]),'ENTAO':([14,21,26,27,28,29,30,31,32,33,35,36,39,40,44,45,46,69,70,71,78,80,81,82,86,87,93,94,113,],[-11,-13,-70,-39,-43,-44,-45,-47,-12,-49,-51,-53,-71,-72,-73,-74,-75,-54,-70,-55,-15,-46,-48,-50,-52,-69,-14,-76,118,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'lista_declaracoes':([0,],[2,]),'declaracao':([0,2,],[3,15,]),'declaracao_variaveis':([0,2,88,114,123,130,],[4,4,99,99,99,99,]),'inicializacao_variaveis':([0,2,],[5,5,]),'declaracao_funcao':([0,2,],[6,6,]),'tipo':([0,2,20,74,88,114,123,130,],[7,7,50,50,106,106,106,106,]),'atribuicao':([0,2,19,22,38,51,65,88,95,107,114,116,117,119,123,130,],[8,8,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'cabecalho':([0,2,7,],[9,9,17,]),'var':([0,2,16,19,22,34,37,38,51,53,54,57,64,65,66,88,95,107,114,115,116,117,119,123,130,],[12,12,24,26,26,70,70,26,26,79,70,70,70,26,70,26,26,26,26,120,26,26,26,26,26,]),'identificador':([0,2,7,16,19,22,34,37,38,51,53,54,57,64,65,66,76,88,95,107,114,115,116,117,119,123,130,],[13,13,18,25,32,32,32,32,32,32,25,32,32,32,32,32,92,32,32,32,32,25,32,32,32,32,32,]),'indice':([13,25,32,],[21,21,21,]),'lista_variaveis':([16,],[23,]),'expressao':([19,22,38,51,65,88,95,107,114,116,117,119,123,130,],[27,52,72,77,84,98,112,113,98,121,122,124,98,98,]),'expressao_logica':([19,22,38,51,65,88,95,107,114,116,117,119,123,130,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'expressao_simples':([19,22,38,51,54,65,88,95,107,114,116,117,119,123,130,],[30,30,30,30,80,30,30,30,30,30,30,30,30,30,30,]),'expressao_aditiva':([19,22,38,51,54,57,65,88,95,107,114,116,117,119,123,130,],[31,31,31,31,31,81,31,31,31,31,31,31,31,31,31,31,]),'expressao_multiplicativa':([19,22,38,51,54,57,64,65,88,95,107,114,116,117,119,123,130,],[33,33,33,33,33,33,82,33,33,33,33,33,33,33,33,33,33,]),'operador_soma':([19,22,31,38,51,54,57,64,65,66,81,88,95,107,114,116,117,119,123,130,],[34,34,64,34,34,34,34,34,34,34,64,34,34,34,34,34,34,34,34,34,]),'expressao_unaria':([19,22,38,51,54,57,64,65,66,88,95,107,114,116,117,119,123,130,],[35,35,35,35,35,35,35,35,86,35,35,35,35,35,35,35,35,35,]),'fator':([19,22,34,37,38,51,54,57,64,65,66,88,95,107,114,116,117,119,123,130,],[36,36,69,71,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'operador_negacao':([19,22,38,51,54,57,64,65,66,88,95,107,114,116,117,119,123,130,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'chamada_funcao':([19,22,34,37,38,51,54,57,64,65,66,88,95,107,114,116,117,119,123,130,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'numero':([19,22,34,37,38,51,54,57,64,65,66,88,95,107,114,116,117,119,123,130,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'lista_parametros':([20,],[47,]),'parametro':([20,74,],[48,90,]),'vazio':([20,65,73,108,118,129,],[49,85,89,89,89,89,]),'operador_logico':([28,],[54,]),'operador_relacional':([30,80,],[57,57,]),'operador_multiplicacao':([33,82,],[66,66,]),'lista_argumentos':([65,],[83,]),'corpo':([73,108,118,129,],[88,114,123,130,]),'acao':([88,114,123,130,],[97,97,97,97,]),'se':([88,114,123,130,],[100,100,100,100,]),'repita':([88,114,123,130,],[101,101,101,101,]),'leia':([88,114,123,130,],[102,102,102,102,]),'escreva':([88,114,123,130,],[103,103,103,103,]),'retorna':([88,114,123,130,],[104,104,104,104,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> lista_declaracoes','programa',1,'p_programa','tpp_parser.py',31),
  ('lista_declaracoes -> lista_declaracoes declaracao','lista_declaracoes',2,'p_lista_declaracoes','tpp_parser.py',35),
  ('lista_declaracoes -> declaracao','lista_declaracoes',1,'p_lista_declaracoes','tpp_parser.py',36),
  ('declaracao -> declaracao_variaveis','declaracao',1,'p_declaracao','tpp_parser.py',43),
  ('declaracao -> inicializacao_variaveis','declaracao',1,'p_declaracao','tpp_parser.py',44),
  ('declaracao -> declaracao_funcao','declaracao',1,'p_declaracao','tpp_parser.py',45),
  ('declaracao_variaveis -> tipo DOIS_PONTOS lista_variaveis','declaracao_variaveis',3,'p_declaracao_variaveis','tpp_parser.py',49),
  ('inicializacao_variaveis -> atribuicao','inicializacao_variaveis',1,'p_inicializacao_variaveis','tpp_parser.py',53),
  ('lista_variaveis -> lista_variaveis VIRGULA var','lista_variaveis',3,'p_lista_variaveis','tpp_parser.py',57),
  ('lista_variaveis -> var','lista_variaveis',1,'p_lista_variaveis','tpp_parser.py',58),
  ('identificador -> ID','identificador',1,'p_identificador','tpp_parser.py',65),
  ('var -> identificador','var',1,'p_var','tpp_parser.py',69),
  ('var -> identificador indice','var',2,'p_var','tpp_parser.py',70),
  ('indice -> indice ABRE_COL expressao FECHA_COL','indice',4,'p_indice','tpp_parser.py',78),
  ('indice -> ABRE_COL expressao FECHA_COL','indice',3,'p_indice','tpp_parser.py',79),
  ('tipo -> INTEIRO','tipo',1,'p_tipo','tpp_parser.py',86),
  ('tipo -> FLUTUANTE','tipo',1,'p_tipo','tpp_parser.py',87),
  ('declaracao_funcao -> tipo cabecalho','declaracao_funcao',2,'p_declaracao_funcao','tpp_parser.py',91),
  ('declaracao_funcao -> cabecalho','declaracao_funcao',1,'p_declaracao_funcao','tpp_parser.py',92),
  ('cabecalho -> identificador ABRE_PAR lista_parametros FECHA_PAR corpo FIM','cabecalho',6,'p_cabecalho','tpp_parser.py',99),
  ('lista_parametros -> lista_parametros VIRGULA parametro','lista_parametros',3,'p_lista_parametros','tpp_parser.py',103),
  ('lista_parametros -> parametro','lista_parametros',1,'p_lista_parametros','tpp_parser.py',104),
  ('lista_parametros -> vazio','lista_parametros',1,'p_lista_parametros','tpp_parser.py',105),
  ('parametro -> tipo DOIS_PONTOS identificador','parametro',3,'p_parametro_1','tpp_parser.py',112),
  ('parametro -> parametro ABRE_COL FECHA_COL','parametro',3,'p_parametro_2','tpp_parser.py',116),
  ('corpo -> corpo acao','corpo',2,'p_corpo','tpp_parser.py',120),
  ('corpo -> vazio','corpo',1,'p_corpo','tpp_parser.py',121),
  ('acao -> expressao','acao',1,'p_acao','tpp_parser.py',128),
  ('acao -> declaracao_variaveis','acao',1,'p_acao','tpp_parser.py',129),
  ('acao -> se','acao',1,'p_acao','tpp_parser.py',130),
  ('acao -> repita','acao',1,'p_acao','tpp_parser.py',131),
  ('acao -> leia','acao',1,'p_acao','tpp_parser.py',132),
  ('acao -> escreva','acao',1,'p_acao','tpp_parser.py',133),
  ('acao -> retorna','acao',1,'p_acao','tpp_parser.py',134),
  ('acao -> error','acao',1,'p_acao','tpp_parser.py',135),
  ('se -> SE expressao ENTAO corpo FIM','se',5,'p_se','tpp_parser.py',139),
  ('se -> SE expressao ENTAO corpo SENAO corpo FIM','se',7,'p_se','tpp_parser.py',140),
  ('repita -> REPITA corpo ATE expressao','repita',4,'p_repita','tpp_parser.py',147),
  ('atribuicao -> var ATRIBUICAO expressao','atribuicao',3,'p_atribuicao','tpp_parser.py',151),
  ('leia -> LEIA ABRE_PAR var FECHA_PAR','leia',4,'p_leia','tpp_parser.py',155),
  ('escreva -> ESCREVA ABRE_PAR expressao FECHA_PAR','escreva',4,'p_escreva','tpp_parser.py',159),
  ('retorna -> RETORNA ABRE_PAR expressao FECHA_PAR','retorna',4,'p_retorna','tpp_parser.py',163),
  ('expressao -> expressao_logica','expressao',1,'p_expressao','tpp_parser.py',167),
  ('expressao -> atribuicao','expressao',1,'p_expressao','tpp_parser.py',168),
  ('expressao_logica -> expressao_simples','expressao_logica',1,'p_expressao_logica','tpp_parser.py',172),
  ('expressao_logica -> expressao_logica operador_logico expressao_simples','expressao_logica',3,'p_expressao_logica','tpp_parser.py',173),
  ('expressao_simples -> expressao_aditiva','expressao_simples',1,'p_expressao_simples','tpp_parser.py',180),
  ('expressao_simples -> expressao_simples operador_relacional expressao_aditiva','expressao_simples',3,'p_expressao_simples','tpp_parser.py',181),
  ('expressao_aditiva -> expressao_multiplicativa','expressao_aditiva',1,'p_expressao_aditiva','tpp_parser.py',188),
  ('expressao_aditiva -> expressao_aditiva operador_soma expressao_multiplicativa','expressao_aditiva',3,'p_expressao_aditiva','tpp_parser.py',189),
  ('expressao_multiplicativa -> expressao_unaria','expressao_multiplicativa',1,'p_expressao_multiplicativa','tpp_parser.py',196),
  ('expressao_multiplicativa -> expressao_multiplicativa operador_multiplicacao expressao_unaria','expressao_multiplicativa',3,'p_expressao_multiplicativa','tpp_parser.py',197),
  ('expressao_unaria -> fator','expressao_unaria',1,'p_expressao_unaria','tpp_parser.py',204),
  ('expressao_unaria -> operador_soma fator','expressao_unaria',2,'p_expressao_unaria','tpp_parser.py',205),
  ('expressao_unaria -> operador_negacao fator','expressao_unaria',2,'p_expressao_unaria','tpp_parser.py',206),
  ('operador_relacional -> MENOR','operador_relacional',1,'p_operador_relacional','tpp_parser.py',213),
  ('operador_relacional -> MAIOR','operador_relacional',1,'p_operador_relacional','tpp_parser.py',214),
  ('operador_relacional -> IGUALDADE','operador_relacional',1,'p_operador_relacional','tpp_parser.py',215),
  ('operador_relacional -> DESIGUALDADE','operador_relacional',1,'p_operador_relacional','tpp_parser.py',216),
  ('operador_relacional -> MENOR_IGUAL','operador_relacional',1,'p_operador_relacional','tpp_parser.py',217),
  ('operador_relacional -> MAIOR_IGUAL','operador_relacional',1,'p_operador_relacional','tpp_parser.py',218),
  ('operador_soma -> SOMA','operador_soma',1,'p_operador_soma','tpp_parser.py',222),
  ('operador_soma -> SUBTRACAO','operador_soma',1,'p_operador_soma','tpp_parser.py',223),
  ('operador_logico -> E_LOGICO','operador_logico',1,'p_operador_logico','tpp_parser.py',227),
  ('operador_logico -> OU_LOGICO','operador_logico',1,'p_operador_logico','tpp_parser.py',228),
  ('operador_negacao -> NEGACAO','operador_negacao',1,'p_operador_negacao','tpp_parser.py',232),
  ('operador_multiplicacao -> MULTIPLICACAO','operador_multiplicacao',1,'p_operador_multiplicacao','tpp_parser.py',236),
  ('operador_multiplicacao -> DIVISAO','operador_multiplicacao',1,'p_operador_multiplicacao','tpp_parser.py',237),
  ('fator -> ABRE_PAR expressao FECHA_PAR','fator',3,'p_fator','tpp_parser.py',241),
  ('fator -> var','fator',1,'p_fator','tpp_parser.py',242),
  ('fator -> chamada_funcao','fator',1,'p_fator','tpp_parser.py',243),
  ('fator -> numero','fator',1,'p_fator','tpp_parser.py',244),
  ('numero -> NUM_INTEIRO','numero',1,'p_numero','tpp_parser.py',251),
  ('numero -> NUM_PONTO_FLUTUANTE','numero',1,'p_numero','tpp_parser.py',252),
  ('numero -> NUM_NOTACAO_CIENTIFICA','numero',1,'p_numero','tpp_parser.py',253),
  ('chamada_funcao -> identificador ABRE_PAR lista_argumentos FECHA_PAR','chamada_funcao',4,'p_chamada_funcao','tpp_parser.py',257),
  ('lista_argumentos -> lista_argumentos VIRGULA expressao','lista_argumentos',3,'p_lista_argumentos','tpp_parser.py',261),
  ('lista_argumentos -> expressao','lista_argumentos',1,'p_lista_argumentos','tpp_parser.py',262),
  ('lista_argumentos -> vazio','lista_argumentos',1,'p_lista_argumentos','tpp_parser.py',263),
  ('comentario -> COMENTARIO','comentario',1,'p_comentario','tpp_parser.py',271),
  ('vazio -> <empty>','vazio',0,'p_vazio','tpp_parser.py',275),
]
